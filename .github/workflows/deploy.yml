name: Deploy vics frontend

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY_FRONTEND: vics/frontend
  IMAGE_TAG: latest

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Create .env file
        run: |
          echo "NEXT_PUBLIC_API_URL=${{ secrets.ENV_NEXT_PUBLIC_API_URL }}" >> .env
          echo "NEXT_PUBLIC_AUTH_API_KEY=${{ secrets.ENV_NEXT_PUBLIC_AUTH_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_GEMINI_API_KEY=${{ secrets.ENV_NEXT_PUBLIC_GEMINI_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_JWT_SECRET=${{ secrets.ENV_NEXT_PUBLIC_JWT_SECRET }}" >> .env
          echo "NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}" >> .env
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> .env
      - name: Build Docker image
        run: docker build --pull -t ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_FRONTEND }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker image
        run: docker push ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_FRONTEND }}:${{ env.IMAGE_TAG }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/vics
            docker-compose -f vics-frontend.yml down --remove-orphans
            docker image prune -af  # prune only images, not volumes
            docker-compose -f vics-frontend.yml pull --ignore-pull-failures
            docker-compose -f vics-frontend.yml up -d --force-recreate
