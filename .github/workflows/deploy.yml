name: CI/CD Pipeline for Next.js with AWS Lightsail

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Verify build script
        run: |
          if ! grep -q '"build":' package.json; then
            echo "ERROR: No build script found in package.json!" >&2
            exit 1
          fi

      - name: Build Next.js Application
        run: npm run build

      - name: Run tests
        run: |
          echo "Running tests..."
          npm test || echo "No tests defined or some tests failed."

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add SSH Key for Lightsail
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/lightsail_key
          chmod 600 ~/.ssh/lightsail_key

      - name: Create .env file from secrets
        run: |
          cat <<EOF > .env
          NEXT_PUBLIC_AUTH_API_KEY=${{ secrets.ENV_NEXT_PUBLIC_AUTH_API_KEY }}
          NEXT_PUBLIC_API_URL=${{ secrets.ENV_NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_JWT_SECRET=${{ secrets.ENV_NEXT_PUBLIC_JWT_SECRET }}
          NEXT_PUBLIC_GEMINI_API_KEY=${{ secrets.ENV_NEXT_PUBLIC_GEMINI_API_KEY }}
          EOF

      - name: Deploy Next.js Application to AWS Lightsail
        env:
          LIGHTSAIL_IP: "13.43.41.67"
        run: |
          echo "Deploying Next.js application to AWS Lightsail..."

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/lightsail_key ubuntu@$LIGHTSAIL_IP "
            set -e
            sudo mkdir -p /var/www/html
            sudo chown -R ubuntu:ubuntu /var/www/html
          "

          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.next/cache' \
            -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/lightsail_key" \
            ./ ubuntu@$LIGHTSAIL_IP:/var/www/html

          if [ -f .env ]; then
            echo "Uploading .env file..."
            scp -o StrictHostKeyChecking=no -i ~/.ssh/lightsail_key .env ubuntu@$LIGHTSAIL_IP:/var/www/html/.env
          fi

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/lightsail_key ubuntu@$LIGHTSAIL_IP "
            set -e
            cd /var/www/html

            sudo apt update

            if ! command -v node &> /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi

            if ! command -v npm &> /dev/null; then
              sudo apt install -y npm
            fi

            npm ci
            npm run build

            if ! command -v pm2 &> /dev/null; then
              sudo npm install -g pm2
              pm2 startup systemd -u ubuntu --hp /home/ubuntu
              sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu
            fi

            pm2 delete nextjs-app || true
            pm2 start npm --name 'nextjs-app' -- start -- -p 4000
            pm2 save

            if systemctl is-active --quiet nginx; then
              echo 'Reloading Nginx...'
              sudo systemctl reload nginx
            else
              echo 'Nginx is not running. Skipping reload.'
            fi
          "

      - name: Cleanup
        run: |
          echo "Cleaning up temporary files..."
          rm -f ~/.ssh/lightsail_key
